plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.example'
version = 'latest'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
jacoco {
	toolVersion = "0.8.5"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.modelmapper:modelmapper:2.3.8'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.7.7'
	testCompileOnly group: 'org.powermock', name: 'powermock-api-mockito2', version: '1.7.4'
	testCompileOnly group: 'org.powermock', name: 'powermock-module-junit4', version: '1.7.4'
}

test {
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}
jacocoTestReport {
	reports {
		html.enabled true
		csv.enabled false
		xml.enabled false
	}
	finalizedBy 'jacocoTestCoverageVerification'
}
jacocoTestCoverageVerification{
	violationRules {
		rule{
			enabled = true
			element = 'CLASS'

			limit{
				counter='LINE'
				value='COVEREDRATIO'
//				minimum=0.0
			}
			excludes=[]
		}
	}
}