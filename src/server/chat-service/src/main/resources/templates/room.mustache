{{>header}}
<body>
<div>
    <button type="button" onClick="login(0)">유저#1으로 로그인하기</button>
    <button type="button" onClick="login(1)">유저#2으로 로그인하기</button>
    <button type="button" onClick="login(2)">유저#3으로 로그인하기</button>
    <button type="button" onClick="login(3)">유저#4으로 로그인하기</button>
    <h3>채팅방 리스트</h3>
    <div>
        <label>방제목</label>
        <input id="roomUuid" type="text"/>
        <button type="button" onClick="createRoom()">채팅방 개설</button>
    </div>
    <ul>
        {{#rooms}}
        <li>
            <button type="button" onClick="enterRoom(`{{uuid}}`)"> {{uuid}} </button>
        </li>
        {{/rooms}}
    </ul>
</div>
{{>footer}}
<!-- JavaScript -->

<script>
    const email ="user1@email.com";
    const password = "1234";
    const roomUuidElem = document.querySelector("#roomUuid");
    const userData = [
        {
            // "name": "user1",
            "uuid": "11111111-1234-1234-123456789012",
            "email": "u1@email.com",
            "password": "1234",
            "token":""
        },
        {
            // "name": "user2",
            "uuid": "22222222-1234-1234-123456789012",
            "email": "u2@email.com",
            "password": "1234",
            "token":""
        },
        {
            // "name": "user3",
            "uuid": "33333333-1234-1234-123456789012",
            "email": "u3@email.com",
            "password": "1234",
            "token":""
        },
        {
            // "name": "user4",
            "uuid": "44444444-1234-1234-123456789012",
            "email": "u4@email.com",
            "password": "1234",
            "token":""
        }
    ];
    createRoom = () => {
        const roomUuid = roomUuidElem.value;
        console.log(roomUuid);
        if("" === roomUuid) {
            alert("방 제목을 입력해 주십시요.");
            return;
        } else {
            const reqData = {
                uuid: `${roomUuid}`,//"99999999-1234-1234-888888888888",
                hostUuid: "11111111-1234-1234-123456789012"
            };
            axios.post('/chat/room', reqData)
            .then(
                response => {
                    console.log('---',response.data);
                    roomUuidElem.innerText ='';
                    window.location.href="/chat/room";
                }
            )
            .catch( response => {
                console.log(response);
                alert("채팅방 개설에 실패하였습니다.");
            });
        }
    };
    enterRoom= (roomUuid) => {
        console.log("enterRoom btn");
        // const senderUuid = prompt('본인의 uuid를 입력해 주세요. 11111111-1234-1234-123456789012');
        // const senderNickname = prompt('본인의 닉네임을 입력해 주세요.');
        localStorage.setItem('wschat.senderUuid',localStorage.getItem("wschat.senderUuid"));
        localStorage.setItem('wschat.senderNickname',localStorage.getItem("wschat.senderNickname"));
        localStorage.setItem('wschat.roomId',roomUuid);
        location.href="/chat/room/enter/"+roomUuid;
    }

    login = (i) => {
        console.log("==유저#1로 login");

        const req = {
            email: userData[i].email,
            password: userData[i].password
        };
        axios.post('http://localhost:8000/user-service/login', req)
                .then(resp => {
                    userData[i].token = resp.headers.token;
                    localStorage.setItem("wschat.token", resp.headers.token);
                    localStorage.setItem("wschat.senderUuid", resp.headers.uuid);
                    localStorage.setItem("wschat.senderNickname", resp.data.nickName);
                    console.log("uuid:"+resp.headers.uuid);
                    console.log("token:"+resp.headers.token);
                })
                .catch(error => {
                    console.log("로그인 에러:" + JSON.stringify(error));
                });
    };
</script>