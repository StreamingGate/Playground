{{>header}}
<body>
<div>
    <h2 id="roomId"></h2>
    <span id="userCnt">x 명 접속중</span>
</div>
<div>
    <label>채팅 내용</label><br>
    <input type="text" id="inputMsg">
    <button type="button" onClick="sendMessage()">보내기</button>
    <br>
    <label>스트리머권한으로 고정 하기</label><br>
    <input type="text" id="inputPin">
    <button type="button" onClick="pinMessage(true, 'STREAMER')">고정하기</button>
    <br>
    <label>시청자권한으로 고정 하기</label><br>
    <input type="text" id="fakePin">
    <button type="button" onClick="pinMessage(false, 'VIEWER')">고정하기</button>
</div>
<ul id="msglist">

</ul>
{{>footer}}
<!-- JavaScript -->
<script>
    // websocket & stomp initialize
    let sock = new SockJS("/ws");
    let ws = Stomp.over(sock);

    let roomTitle = document.querySelector("#roomId");
    let msgList = document.querySelector("#msglist");
    let userCntElem = document.querySelector("#userCnt");
    let data = {
        roomId: localStorage.getItem('wschat.roomId'),
        room: {},
        senderUuid: localStorage.getItem('wschat.senderUuid'),
        senderNickname: localStorage.getItem('wschat.senderNickname'),
        uuid: localStorage.getItem('wschat.uuid'), //room uuid
        pinnedChats: []
    }

    /* 방 정보 조회 */
    findRoom = function () {
        axios.get('/chat/room/' + data.roomId).then(response => {
            data.room = response.data;
            data.pinnedChats = response.data.pinnedChats;
            console.log("resp:", response.data);

            document.querySelector("#roomId").innerText = data.room.uuid+ ` 방장: ${data.room.hostUuid}`;

            if (data.pinnedChats !== undefined) {
                for (let i = 0; i < data.pinnedChats.length; i++) {
                    const liElem = document.createElement("li");
                    liElem.innerText = "[PINNED]" + data.pinnedChats[i].nickname + "-" + data.pinnedChats[i].message;
                    msgList.append(liElem);
                }
            }
        });
    }

    /* 채팅 메시지 전송 */
    sendMessage = () => {
        console.log("send btn");
        const inputMsg = document.querySelector("#inputMsg").value;
        ws.send("/app/chat/message/" + data.roomId, {}, JSON.stringify(
                {
                    roomId: data.roomId,
                    nickname: data.senderNickname,
                    uuid: data.senderUuid,  // 보내는 사람
                    senderRole: "VIEWER",   // VIEWER, STREAMER
                    chatType: "NORMAL",     // NORMAL, PINNED
                    message: inputMsg,
                }));
    }

    /* 고정 메시지 전송 */
    pinMessage = (isFake, senderRole) => {
        console.log("pin btn");
        let inputVal = "";
        if (isFake === true) inputVal = document.querySelector("#inputPin").value;
        else inputVal = document.querySelector("#fakePin").value;

        ws.send("/app/chat/message/" + data.roomId, {}, JSON.stringify(
                {
                    roomId: data.roomId,
                    nickname: data.senderNickname,
                    uuid: data.senderUuid,
                    senderRole: senderRole,   // VIEWER, STREAMER
                    chatType: "PINNED",     // NORMAL, PINNED
                    message: inputVal,
                }));
    }

    recvMessage = (chat) => {
        console.log("received msg...");
        const liElem = document.createElement("li");
        liElem.innerText = "[" + chat.nickname + "] " + "("+chat.timeStamp+")    " +  chat.message;
        msgList.append(liElem);
    }

    findRoom();

    ws.connect({
            token: `${localStorage.getItem('wschat.token')}`
        }, function (frame) {
            /* 채팅, 현재 접속자 수 subscribe */
            ws.subscribe("/topic/chat/room/" + data.roomId, function (resp) {
                console.log("received");
                const chat = JSON.parse(resp.body);
                recvMessage(chat);
            }, {
                uuid: `${data.senderUuid}`
            });
    }, function (error) {
        alert("error " + error);
    });

    /* 창이 닫히기 직전 disconnect 전송 */
    window.onbeforeunload = function(e){
        if(ws !== null) {
            ws.disconnect(function() {
                // ws.send("/app/user-cnt/room/" + data.roomId + "/exit", {}, {});
                console.log("disconnected..");
            })
        }
    }
</script>